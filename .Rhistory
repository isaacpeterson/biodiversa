z_datfile_control_template = c('[Settings]',
'removal rule = 1',
'warp factor = 1000',
'edge removal = 1',
'add edge points = 0',
'initial removal percent = 0.0')
z_variants <- expand.grid(build_zonation_params$variants, stringsAsFactors=FALSE)
# build file variants
for (variant_ind in seq_along(z_variants)){
current_variant <- paste0('z_variant_', variant_ind)
if (!dir.exists(x, '/out/')){
dir.create(paste0(build_zonation_params$workdir, current_variant, '/out/'), recursive = TRUE)
}
}
# build file variants
for (variant_ind in seq_along(z_variants)){
current_variant <- paste0('z_variant_', variant_ind)
if (!dir.exists(paste0(build_zonation_params$workdir, current_variant, '/out/'))){
dir.create(paste0(build_zonation_params$workdir, current_variant, '/out/'), recursive = TRUE)
}
}
# build file variants
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (!dir.exists(paste0(build_zonation_params$workdir, current_variant, '/out/'))){
dir.create(paste0(build_zonation_params$workdir, current_variant, '/out/'), recursive = TRUE)
}
}
build_type = 'local_shell'
# build file variants
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (build_type == 'local_shell'){
data_to_write = c(build_zonation_params$local_sh_preamble,
paste("zig4 -r",
paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.dat'),
paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.spp'),
paste0(build_zonation_params$workdir, current_variant, '/out/', current_variant, '_out.txt'),
build_zonation_params$base_z_control,
build_zonation_params$output_control_string))
} else if (build_type == 'dat'){
data_to_write = z_datfile_control_template
} else if (build_type == 'spp'){
param_variants$species_group
data_to_write = paste(build_zonation_params$base_species_control, build_zonation_params$path_to_species_data, current_species_group)
}
current_file_ID <- file(current_file)
writeLines(data_to_write, file_con)
close(current_file_ID)
Sys.chmod(current_z_variant_sh_file)
}
build_type = 'local_shell'
# build file variants
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (build_type == 'local_shell'){
data_to_write = c(build_zonation_params$local_sh_preamble,
paste("zig4 -r",
paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.dat'),
paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.spp'),
paste0(build_zonation_params$workdir, current_variant, '/out/', current_variant, '_out.txt'),
build_zonation_params$base_z_control,
build_zonation_params$output_control_string))
current_file = paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.sh')
} else if (build_type == 'dat'){
data_to_write = z_datfile_control_template
} else if (build_type == 'spp'){
param_variants$species_group
data_to_write = paste(build_zonation_params$base_species_control, build_zonation_params$path_to_species_data, current_species_group)
}
current_file_ID <- file(current_file)
writeLines(data_to_write, file_con)
close(current_file_ID)
Sys.chmod(current_z_variant_sh_file)
}
build_type = 'local_shell'
# build file variants
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (build_type == 'local_shell'){
data_to_write = c(build_zonation_params$local_sh_preamble,
paste("zig4 -r",
paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.dat'),
paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.spp'),
paste0(build_zonation_params$workdir, current_variant, '/out/', current_variant, '_out.txt'),
build_zonation_params$base_z_control,
build_zonation_params$output_control_string))
current_file = paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.sh')
} else if (build_type == 'dat'){
data_to_write = z_datfile_control_template
} else if (build_type == 'spp'){
param_variants$species_group
data_to_write = paste(build_zonation_params$base_species_control, build_zonation_params$path_to_species_data, current_species_group)
}
file_ID <- file(current_file)
writeLines(data_to_write, file_ID)
close(current_file_ID)
Sys.chmod(current_z_variant_sh_file)
}
build_type = 'local_shell'
# build file variants
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (build_type == 'local_shell'){
data_to_write = c(build_zonation_params$local_sh_preamble,
paste("zig4 -r",
paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.dat'),
paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.spp'),
paste0(build_zonation_params$workdir, current_variant, '/out/', current_variant, '_out.txt'),
build_zonation_params$base_z_control,
build_zonation_params$output_control_string))
current_file = paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.sh')
} else if (build_type == 'dat'){
data_to_write = z_datfile_control_template
} else if (build_type == 'spp'){
param_variants$species_group
data_to_write = paste(build_zonation_params$base_species_control, build_zonation_params$path_to_species_data, current_species_group)
}
file_ID <- file(current_file)
writeLines(data_to_write, file_ID)
close(current_file_ID)
Sys.chmod(current_file)
}
build_type = 'local_shell'
# build file variants
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (build_type == 'local_shell'){
data_to_write = c(build_zonation_params$local_sh_preamble,
paste("zig4 -r",
paste0(current_variant, '/', current_variant, '.dat'),
paste0(current_variant, '/', current_variant, '.spp'),
paste0(current_variant, '/out/', current_variant, '_out.txt'),
build_zonation_params$base_z_control,
build_zonation_params$output_control_string))
current_file = paste0(build_zonation_params$workdir, current_variant, '.sh')
} else if (build_type == 'dat'){
data_to_write = z_datfile_control_template
} else if (build_type == 'spp'){
param_variants$species_group
data_to_write = paste(build_zonation_params$base_species_control, build_zonation_params$path_to_species_data, current_species_group)
}
file_ID <- file(current_file)
writeLines(data_to_write, file_ID)
close(current_file_ID)
Sys.chmod(current_file)
}
z_variants <- expand.grid(build_zonation_params$variants, stringsAsFactors=FALSE)
# build file variants
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (!dir.exists(paste0(build_zonation_params$workdir, current_variant, '/out/'))){
dir.create(paste0(build_zonation_params$workdir, current_variant, '/out/'), recursive = TRUE)
}
}
build_type = 'local_shell'
# build file variants
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (build_type == 'local_shell'){
data_to_write = c(build_zonation_params$local_sh_preamble,
paste("zig4 -r",
paste0(current_variant, '/', current_variant, '.dat'),
paste0(current_variant, '/', current_variant, '.spp'),
paste0(current_variant, '/out/', current_variant, '_out.txt'),
build_zonation_params$base_z_control,
build_zonation_params$output_control_string))
current_file = paste0(build_zonation_params$workdir, current_variant, '.sh')
} else if (build_type == 'dat'){
data_to_write = z_datfile_control_template
} else if (build_type == 'spp'){
param_variants$species_group
data_to_write = paste(build_zonation_params$base_species_control, build_zonation_params$path_to_species_data, current_species_group)
}
file_ID <- file(current_file)
writeLines(data_to_write, file_ID)
close(current_file_ID)
Sys.chmod(current_file)
}
# NOTE: This script is used to generate Zonation setups for public release.
# See XXXXXX for a more detailed explanation.
#
# NOTE: you will need the latest version for this to work
# zonator > 0.5.0
# devtools::install_github("cbig/zonator")
library(dplyr)
library(raster)
library(readr)
library(readxl)
library(zonator)
library(rgdal)
build_variant_objects <- function(z_variants, build_type, build_zonation_params){
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (build_type == 'local_shell'){
data_to_write = c(build_zonation_params$local_sh_preamble,
paste("zig4 -r",
paste0(current_variant, '/', current_variant, '.dat'),
paste0(current_variant, '/', current_variant, '.spp'),
paste0(current_variant, '/out/', current_variant, '_out.txt'),
build_zonation_params$base_z_control,
build_zonation_params$output_control_string))
current_file = paste0(build_zonation_params$workdir, current_variant, '.sh')
} else if (build_type == 'dat'){
data_to_write = build_zonation_params$z_datfile_control_template
current_file = paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.sh')
} else if (build_type == 'spp'){
param_variants$species_group
data_to_write = paste(build_zonation_params$base_species_control, build_zonation_params$path_to_species_data, current_species_group)
}
file_ID <- file(current_file)
writeLines(data_to_write, file_ID)
close(current_file_ID)
Sys.chmod(current_file)
}
}
build_zonation_params = list()
# Generate variants for all taxa ------------------------------------------
# Define names for variants. "[ID]" is a placeholder for running id, "[TX]" is
# for taxon codes.
build_zonation_params$variants = list()
build_zonation_params$variants$run_type = c('caz', 'abg')
build_zonation_params$variants$use_weights = c(TRUE, FALSE)
build_zonation_params$variants$group_names = c('amphibians', 'birds', 'freshwater_fish', 'mammals', 'plants', 'reptiles', 'all')
build_zonation_params$output_control_string = list("--grid-output-formats=compressed-tif --image-output-formats=png")
build_zonation_params$base_species_control = '1 1 1 1 0.25'
build_zonation_params$base_z_control = '0.0 0 1.0 0'
build_zonation_params$local_sh_preamble = c("#!/bin/sh", 'cd "$(dirname $0)"')
build_zonation_params$path_to_species_data = '../../../species_data/zenodo/'
build_zonation_params$workdir = 'z_variants/'
list.files(paste0('~/species_data/biodiversa/5km/link_layers/'))
build_zonation_params$z_datfile_control_template = c('[Settings]',
'removal rule = 1',
'warp factor = 1000',
'edge removal = 1',
'add edge points = 0',
'initial removal percent = 0.0')
z_variants <- expand.grid(build_zonation_params$variants, stringsAsFactors=FALSE)
# build file variants
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (!dir.exists(paste0(build_zonation_params$workdir, current_variant, '/out/'))){
dir.create(paste0(build_zonation_params$workdir, current_variant, '/out/'), recursive = TRUE)
}
}
build_type = 'local_shell'
build_variant_objects(z_variants, build_type = 'local_shell', build_zonation_params)
build_variant_objects(z_variants, build_type = 'dat', build_zonation_params)
# NOTE: This script is used to generate Zonation setups for public release.
# See XXXXXX for a more detailed explanation.
#
# NOTE: you will need the latest version for this to work
# zonator > 0.5.0
# devtools::install_github("cbig/zonator")
library(dplyr)
library(raster)
library(readr)
library(readxl)
library(zonator)
library(rgdal)
build_variant_objects <- function(z_variants, build_type, build_zonation_params){
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (build_type == 'local_shell'){
data_to_write = c(build_zonation_params$local_sh_preamble,
paste("zig4 -r",
paste0(current_variant, '/', current_variant, '.dat'),
paste0(current_variant, '/', current_variant, '.spp'),
paste0(current_variant, '/out/', current_variant, '_out.txt'),
build_zonation_params$base_z_control,
build_zonation_params$output_control_string))
current_file = paste0(build_zonation_params$workdir, current_variant, '.sh')
} else if (build_type == 'dat'){
data_to_write = build_zonation_params$z_datfile_control_template
current_file = paste0(build_zonation_params$workdir, current_variant, '/', current_variant, '.dat')
} else if (build_type == 'spp'){
param_variants$species_group
data_to_write = paste(build_zonation_params$base_species_control, build_zonation_params$path_to_species_data, current_species_group)
}
file_ID <- file(current_file)
writeLines(data_to_write, file_ID)
close(current_file_ID)
Sys.chmod(current_file)
}
}
build_zonation_params = list()
# Generate variants for all taxa ------------------------------------------
# Define names for variants. "[ID]" is a placeholder for running id, "[TX]" is
# for taxon codes.
build_zonation_params$variants = list()
build_zonation_params$variants$run_type = c('caz', 'abg')
build_zonation_params$variants$use_weights = c(TRUE, FALSE)
build_zonation_params$variants$group_names = c('amphibians', 'birds', 'freshwater_fish', 'mammals', 'plants', 'reptiles', 'all')
build_zonation_params$output_control_string = list("--grid-output-formats=compressed-tif --image-output-formats=png")
build_zonation_params$base_species_control = '1 1 1 1 0.25'
build_zonation_params$base_z_control = '0.0 0 1.0 0'
build_zonation_params$local_sh_preamble = c("#!/bin/sh", 'cd "$(dirname $0)"')
build_zonation_params$path_to_species_data = '../../../species_data/zenodo/'
build_zonation_params$workdir = 'z_variants/'
list.files(paste0('~/species_data/biodiversa/5km/link_layers/'))
build_zonation_params$z_datfile_control_template = c('[Settings]',
'removal rule = 1',
'warp factor = 1000',
'edge removal = 1',
'add edge points = 0',
'initial removal percent = 0.0')
z_variants <- expand.grid(build_zonation_params$variants, stringsAsFactors=FALSE)
# build file variants
for (variant_ind in seq(nrow(z_variants))){
current_variant <- paste0('z_variant_', variant_ind)
if (!dir.exists(paste0(build_zonation_params$workdir, current_variant, '/out/'))){
dir.create(paste0(build_zonation_params$workdir, current_variant, '/out/'), recursive = TRUE)
}
}
build_variant_objects(z_variants, build_type = 'local_shell', build_zonation_params)
build_variant_objects(z_variants, build_type = 'dat', build_zonation_params)
build_zonation_params$global_sh_template = c('#!/bin/bash -l',
'# created: ',
'# author: peterson',
'#SBATCH -J variant_101',
'#SBATCH --constraint="snb|hsw"',
'#SBATCH -o variant101_output',
'#SBATCH -e variant101_error',
'#SBATCH -p serial',
'#SBATCH -n 1',
'#SBATCH -t 40:00:00',
'#SBATCH --mem-per-cpu=130000',
'#SBATCH --mail-type=END',
'#SBATCH --mail-user=isaac.peterson@helsinki.fi',
'module load geo-env')
z_variant_files <- paste('z_variant', seq(nrow(z_variants)), '.sh')
z_variant_files
z_variant_files <- paste0('z_variant', seq(nrow(z_variants)), '.sh')
z_variant_files
z_variant_files <- paste0('z_variant_', seq(nrow(z_variants)), '.sh')
z_variant_files
paste0("/bin/sh z_variant_", seq(nrow(z_variants))
paste0("/bin/sh z_variant_", seq(nrow(z_variants)), '.sh'))
paste0("/bin/sh z_variant_", seq(nrow(z_variants)), '.sh')
params_object = list()
params_object$variants$run_type = c('caz', 'abg')
params_object$variants$use_weights = c(TRUE, FALSE)
params_object$variants$group_names = c('amphibians', 'birds', 'freshwater_fish', 'mammals', 'plants', 'reptiles', 'all')
params_object$z_params$output_control_string = list("--grid-output-formats=compressed-tif --image-output-formats=png")
params_object$z_params$base_species_control = '1 1 1 1 0.25'
params_object$z_params$base_z_control = '0.0 0 1.0 0'
params_object$z_params$local_sh_preamble = c("#!/bin/sh", 'cd "$(dirname $0)"')
params_object$z_params$path_to_species_data = '../../../species_data/zenodo/'
params_object$z_params$workdir = 'z_variants/'
params_object$z_params$global_sh_preamble = c('#!/bin/bash -l',
'# created: ',
'# author: peterson',
'#SBATCH -J variant_101',
'#SBATCH --constraint="snb|hsw"',
'#SBATCH -o variant101_output',
'#SBATCH -e variant101_error',
'#SBATCH -p serial',
'#SBATCH -n 1',
'#SBATCH -t 40:00:00',
'#SBATCH --mem-per-cpu=130000',
'#SBATCH --mail-type=END',
'#SBATCH --mail-user=isaac.peterson@helsinki.fi',
'module load geo-env')
params_object$z_params$global_z_control_file = "run_global_z.sh"
params_object$z_params$z_datfile_control_template = c('[Settings]',
'removal rule = 1',
'warp factor = 1000',
'edge removal = 1',
'add edge points = 0',
'initial removal percent = 0.0')
list.files(paste0('~/species_data/biodiversa/5km/link_layers/'))
variant_objects <- list()
variant_objects$z_variants <- expand.grid(params_object$z_params$variants, stringsAsFactors=FALSE)
variant_objects$z_variant_files <- paste0("/bin/sh ", params_object$z_params$workdir, "z_variant_", seq(nrow(z_variants)), '.sh')
file_ID <- file(params_object$z_params$global_z_control_file)
writeLines(c(params_object$z_params$global_sh_preamble, variant_objects$z_variant_files), file_ID)
close(file_ID)
Sys.chmod(params_object$z_params$global_z_control_file)
rm(list = ls())
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
seq(nrow(variants_object$variants_object$z_variants)))
seq(nrow(variants_object$variants_object$z_variants))
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
variants_object$z_variants
params_object$z_params$variants
nrow(variants_object$z_variants)
variants_object$z_variants
variants_object <- list()
variants_object$z_variants <- expand.grid(params_object$variants, stringsAsFactors=FALSE)
variants_object$z_variant_files <- paste0("/bin/sh ", params_object$z_params$workdir, "z_variant_", seq(nrow(variants_object$variants_object$z_variants)), '.sh')
variants_object
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
build_variant_files(variants_object$z_variants, build_type = 'local_shell', params_object$z_params)
debugSource('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
variants_object
seq(nrow(variants_object$z_variants))
debugSource('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
debugSource('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
variants_object$z_variant_files
debugSource('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
formatC(1:5, width = 3)
params_object$variants$group_names = formatC(10:100, width = 3, format = "d", flag = "0")
params_object$variants$group_names
seq(10,100, by = 10)
params_object$variants$run_type = c('caz', 'abg')
params_object$variants$use_weights = c(TRUE, FALSE)
params_object$links_fraction = seq(10,100, by = 10)
params_object$variants$group_names = formatC(links_fraction, width = 3, format = "d", flag = "0")
params_object = list()
params_object$variants$run_type = c('caz', 'abg')
params_object$variants$use_weights = c(TRUE, FALSE)
params_object$links_fraction = seq(10,100, by = 10)
params_object$variants$group_names = formatC(params_object$links_fraction, width = 3, format = "d", flag = "0")
variants_object$links_files <- list.files(paste0('~/species_data/biodiversa/5km/link_layers/'))
variants_object$links_variants <- lapply(seq_along(params_object$links_fraction),
function(i) sample(variants_object$links_files,
round(variants_object$links_files/params_object$links_fraction[[i]])
))
lapply(seq_along(params_object$links_fraction),
function(i) sample(variants_object$links_files,
round(length(variants_object$links_files)/params_object$links_fraction[[i]])
))
params_object = list()
params_object$variants$run_type = c('caz', 'abg')
params_object$variants$use_weights = c(TRUE, FALSE)
params_object$links_fraction = seq(10,100, by = 10)
params_object$variants$group_names = formatC(params_object$links_fraction, width = 3, format = "d", flag = "0")
params_object$z_params$output_control_string = list("--grid-output-formats=compressed-tif --image-output-formats=png")
params_object$z_params$base_species_control = '1 1 1 1 0.25'
params_object$z_params$base_z_control = '0.0 0 1.0 0'
params_object$z_params$local_sh_preamble = c("#!/bin/sh", 'cd "$(dirname $0)"')
params_object$z_params$path_to_species_data = '../../../species_data/zenodo/'
params_object$z_params$workdir = 'z_variants/'
params_object$z_params$global_sh_preamble = c('#!/bin/bash -l',
'# created: ',
'# author: peterson',
'#SBATCH -J variant_101',
'#SBATCH --constraint="snb|hsw"',
'#SBATCH -o variant101_output',
'#SBATCH -e variant101_error',
'#SBATCH -p serial',
'#SBATCH -n 1',
'#SBATCH -t 40:00:00',
'#SBATCH --mem-per-cpu=130000',
'#SBATCH --mail-type=END',
'#SBATCH --mail-user=isaac.peterson@helsinki.fi',
'module load geo-env')
params_object$z_params$global_z_control_file = "run_global_z.sh"
params_object$z_params$z_datfile_control_template = c('[Settings]',
'removal rule = 1',
'warp factor = 1000',
'edge removal = 1',
'add edge points = 0',
'initial removal percent = 0.0')
variants_object <- list()
variants_object$z_variants <- expand.grid(params_object$variants, stringsAsFactors=FALSE)
variants_object$z_variant_files <- paste0(params_object$z_params$workdir, "z_variant_", seq(nrow(variants_object$z_variants)), '.sh')
variants_object$links_files <- list.files(paste0('~/species_data/biodiversa/5km/link_layers/'))
variants_object$links_variants <- lapply(seq_along(params_object$links_fraction),
function(i) sample(variants_object$links_files,
round(length(variants_object$links_files)/params_object$links_fraction[[i]])
))
file_ID <- file(params_object$z_params$global_z_control_file)
writeLines(c(params_object$z_params$global_sh_preamble, paste("/bin/sh ", variants_object$z_variant_files)), file_ID)
close(file_ID)
variants_object$z_variants
variants_object$links_variants <- setnames(lapply(seq_along(params_object$links_fraction),
function(i) sample(variants_object$links_files,
round(length(variants_object$links_files)/params_object$links_fraction[[i]]))),
params_object$variants$group_names)
variants_object$links_variants <- setNames(lapply(seq_along(params_object$links_fraction),
function(i) sample(variants_object$links_files,
round(length(variants_object$links_files)/params_object$links_fraction[[i]]))),
params_object$variants$group_names)
summary(variants_object$links_variants)
variants_object <- list()
variants_object$z_variants <- expand.grid(params_object$variants, stringsAsFactors=FALSE)
variants_object$z_variant_files <- paste0(params_object$z_params$workdir, "z_variant_", seq(nrow(variants_object$z_variants)), '.sh')
variants_object$links_files <- list.files(paste0('~/species_data/biodiversa/5km/link_layers/'))
variants_object$links_variants <- setNames(lapply(seq_along(params_object$links_fraction),
function(i) sample(variants_object$links_files,
round(length(variants_object$links_files)*params_object$links_fraction[[i]]/100))),
params_object$variants$group_names)
summary(variants_object$links_variants)
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
summary(variants_object$links_variants)
variants_object$z_variants$group_names[variant_ind]
which(variants_object$links_variants == variants_object$z_variants$group_names[variant_ind])
which(names(variants_object$links_variants) == variants_object$z_variants$group_names[variant_ind])
variants_object$links_variants[[which(names(variants_object$links_variants) == variants_object$z_variants$group_names[variant_ind])]]
current_species_group = variants_object$links_variants[[which(names(variants_object$links_variants) == variants_object$z_variants$group_names[variant_ind])]]
paste(build_zonation_params$base_species_control, build_zonation_params$path_to_species_data, current_species_group)
paste0(build_zonation_params$base_species_control, build_zonation_params$path_to_species_data, current_species_group)
paste0(build_zonation_params$base_species_control, " ", build_zonation_params$path_to_species_data, current_species_group)
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
variants_object$links_variants[[which(names(variants_object$links_variants) == variants_object$z_variants$group_names[variant_ind])]]
current_species_group = variants_object$links_variants[[which(names(variants_object$links_variants) == variants_object$z_variants$group_names[variant_ind])]]
data_to_write = paste0(build_zonation_params$base_species_control, " ", build_zonation_params$path_to_species_data, current_species_group)
current_species_group
data_to_write
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
rm(list = ls())
source('~/GitHub/biodiversa/R/01_zproject/build_z_projects_links.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/build_z_variants.R', echo=TRUE)
unlink(z_variants)
source('~/GitHub/biodiversa/R/01_zproject/build_z_variants.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/build_z_variants.R', echo=TRUE)
