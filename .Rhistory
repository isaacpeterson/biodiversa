install.packages('devtools')
devtools::install_github("isaacpeterson/offset_simulator")
devtools::install_github("cbig/zonator", ref = "develop", build_vignettes = TRUE)
install.packages("zonator")
vignette("zonator-project")
install.packages("zdat")
# NOTE: This script is used to generate Zonation setups for public release.
# See XXXXXX for a more detailed explanation.
#
# NOTE: you will need the latest version for this to work
# zonator > 0.5.0
# devtools::install_github("cbig/zonator")
library(dplyr)
library(raster)
library(readr)
library(readxl)
library(zonator)
library(rgdal)
source("R/00_lib/utils.R")
build_zonation_params = list()
# Generate variants for all taxa ------------------------------------------
# Define names for variants. "[ID]" is a placeholder for running id, "[TX]" is
# for taxon codes.
build_zonation_params$variant_templates = c("[TX]_caz",
"[TX]_abf",
"[TX]_caz_wgt",
"[TX]_abf_wgt",
"[TX]_caz_wgt_con",
"[TX]_abf_wgt_con",
"[TX]_caz_wgt_con_hm3",
"[TX]_abf_wgt_con_hm3")
build_zonation_params$data_dir <- "../../species_data/zenodo/"
build_zonation_params$zsetup_root <- "zsetup"
build_zonation_params$feature_data_file <- paste0(build_zonation_params$data_dir, "data_params/biodiv_features.csv")
build_zonation_params$agg_weights_file <- paste0(build_zonation_params$data_dir, "data_params/aggregate_weights.csv")
build_zonation_params$ppa_raster_file <- paste0(build_zonation_params$data_dir, "group_layers/prefecture.tif")
build_zonation_params$ppa_cmd_string <- paste(c("LSM", build_zonation_params$ppa_raster_file, 0, -1, 0), collapse = " ")
build_zonation_params$condition_raster_file <- paste0(build_zonation_params$data_dir, "group_layers/hii_rescaled_simple.tif")
# Hierarchical masks
build_zonation_params$hm3_raster_file <- paste0(build_zonation_params$data_dir, "group_layers/PA_3_levels_simple.tif")
build_zonation_params$w_field <- "weight"
build_zonation_params$condition_config_file <- "condition_config.txt"
build_zonation_params$ppa_config_file <- "ppa_config.txt"
build_zonation_params$use_groups = rep(1, 100)
build_zonation_params$cell_removal_rule = rep(c(1, 2), 50)
# Make a list to hold information on the different taxa names, short codes
# and Excel sheet names (sheet names not actually needed).
# build_zonation_params$species_data_template <- list("amphibians" = list("code" = "amp", "sheet" = "amphibians"),
#                                                 "birds" = list("code" = "bir", "sheet" = "birds"),
#                                                 "freshwater_fish" = list("code" = "frf", "sheet" = "freshwater_fish"),
#                                                 "mammals" = list("code" = "mam", "sheet" = "mammals"),
#                                                 "plants" = list("code" = "pla", "sheet" = "plants"),
#                                                 "reptiles" = list("code" = "rep", "sheet" = "reptiles"))
build_zonation_params$species_group_names = c('amphibians', 'birds', 'freshwater_fish', 'mammals', 'plants', 'reptiles')
build_zonation_params$species_group_codes = c('amp', 'bir', 'frf', 'mam', 'pla', 'rep')
build_zonation_params$species_data_template = setNames(lapply(seq_along(build_zonation_params$species_group_names),
function(species_group_ind) setNames(list(build_zonation_params$species_group_codes[species_group_ind],
build_zonation_params$species_group_names[species_group_ind]),
c('code', 'sheet'))),
build_zonation_params$species_group_names)
build_zonation_params$variant_cycle = rep(1:length(build_zonation_params$species_data_template) + 1,
each = length(build_zonation_params$variant_templates))
build_zonation_params$variant_cycle
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
getwd()
setwd('~/GitHub/biodiversa/')
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
z_control_files
paste0("/bin/sh ", z_control_files)
z_template <- readLines(build_zonation_params$control_template)
z_template <- readLines(build_zonation_params$control_template)
file_ID <- file(build_zonation_params$dat_template_file)
writeLines(c(z_template, paste0("/bin/sh ", z_control_files)), file_ID)
close(file_ID)
Sys.chmod(build_zonation_params$Z_sh_runfile)
re(list = ls())
rm(list = ls())
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
rm(list = ls())
debugSource('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
build_zonation_params$z_control_filename
build_zonation_params$z_control_file
file_ID <- file(build_zonation_params$z_control_file)
writeLines(c(z_template, paste0("/bin/sh ", z_control_files)), file_ID)
close(file_ID)
Sys.chmod(build_zonation_params$Z_sh_runfile)
file_ID <- file(build_zonation_params$z_control_file)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
build_zonation_params$data_dir
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
# NOTE: This script is used to generate Zonation setups for public release.
# See XXXXXX for a more detailed explanation.
#
# NOTE: you will need the latest version for this to work
# zonator > 0.5.0
# devtools::install_github("cbig/zonator")
library(dplyr)
library(raster)
library(readr)
library(readxl)
library(zonator)
library(rgdal)
source("R/00_lib/utils.R")
build_zonation_params = list()
# Generate variants for all taxa ------------------------------------------
# Define names for variants. "[ID]" is a placeholder for running id, "[TX]" is
# for taxon codes.
build_zonation_params$variant_templates = c("[TX]_caz",
"[TX]_abf",
"[TX]_caz_wgt",
"[TX]_abf_wgt",
"[TX]_caz_wgt_con",
"[TX]_abf_wgt_con",
"[TX]_caz_wgt_con_hm3",
"[TX]_abf_wgt_con_hm3")
build_zonation_params$data_dir <- paste0(path.expand('~'), "/workdir/species_data/zenodo/")
build_zonation_params$zsetup_root <- paste0(build_zonation_params$data_dir, "zsetup")
build_zonation_params$feature_data_file <- paste0(build_zonation_params$data_dir, "species_params/biodiv_features.csv")
build_zonation_params$agg_weights_file <- paste0(build_zonation_params$data_dir, "species_params/aggregate_weights.csv")
build_zonation_params$ppa_raster_file <- paste0(build_zonation_params$data_dir, "group_layers/prefecture.tif")
build_zonation_params$ppa_cmd_string <- paste(c("LSM", build_zonation_params$ppa_raster_file, 0, -1, 0), collapse = " ")
build_zonation_params$condition_raster_file <- paste0(build_zonation_params$data_dir, "group_layers/hii_rescaled_simple.tif")
# Hierarchical masks
build_zonation_params$hm3_raster_file <- paste0(build_zonation_params$data_dir, "group_layers/PA_3_levels_simple.tif")
build_zonation_params$w_field <- "weight"
build_zonation_params$condition_config_file <- "condition_config.txt"
build_zonation_params$ppa_config_file <- "ppa_config.txt"
build_zonation_params$use_groups = rep(1, 100)
build_zonation_params$cell_removal_rule = rep(c(1, 2), 50)
# Make a list to hold information on the different taxa names, short codes
# and Excel sheet names (sheet names not actually needed).
# build_zonation_params$species_data_template <- list("amphibians" = list("code" = "amp", "sheet" = "amphibians"),
#                                                 "birds" = list("code" = "bir", "sheet" = "birds"),
#                                                 "freshwater_fish" = list("code" = "frf", "sheet" = "freshwater_fish"),
#                                                 "mammals" = list("code" = "mam", "sheet" = "mammals"),
#                                                 "plants" = list("code" = "pla", "sheet" = "plants"),
#                                                 "reptiles" = list("code" = "rep", "sheet" = "reptiles"))
build_zonation_params$species_group_names = c('amphibians', 'birds', 'freshwater_fish', 'mammals', 'plants', 'reptiles')
build_zonation_params$species_group_codes = c('amp', 'bir', 'frf', 'mam', 'pla', 'rep')
build_zonation_params$species_data_template = setNames(lapply(seq_along(build_zonation_params$species_group_names),
function(species_group_ind) setNames(list(build_zonation_params$species_group_codes[species_group_ind],
build_zonation_params$species_group_names[species_group_ind]),
c('code', 'sheet'))),
build_zonation_params$species_group_names)
build_zonation_params$variant_cycle = rep(1:(length(build_zonation_params$species_data_template) + 1),
each = length(build_zonation_params$variant_templates))
build_zonation_params$z_control_template = "templates/run_Z_template.sh"
build_zonation_params$dat_template_file = "templates/template.dat"
build_zonation_params$z_control_file = "run_biodiversa_source.sh"
species_data <- as.data.frame(readr::read_csv(build_zonation_params$feature_data_file))
agg_weights <- readr::read_csv(build_zonation_params$agg_weights_file)
# Set up the project
zproject <- initiate_zproject(zsetup_root = build_zonation_params$zsetup_root,
build_zonation_params$variant_templates,
spp_data = build_zonation_params$species_data_template,
data_dir = build_zonation_params$data_dir,
prefix_spp_paths = "../..",
dat_template_file = build_zonation_params$dat_template_file)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
zsetup_root
if (!file.exists(zsetup_root)){
dir.create(zsetup_root, recursive = TRUE)
}
taxon = names(spp_data)[[1]]
taxon
variant_names <- variant_templates
sub_project_dir <- file.path(zsetup_root, taxon)
message("Creating sub-project in ", sub_project_dir)
# Generate ids dynamically
ids <- sprintf("%02d_",
variant_id:(variant_id + length(variant_names) - 1))
variant_names <- paste0(ids,
gsub(pattern = "\\[TX\\]",
replacement = spp_data[[taxon]]$code,
variant_names))
ids
ids <- sprintf("%02d_",
variant_id:(variant_id + length(variant_names) - 1))
# Generate actual variant names
variant_names <- paste0(ids,
gsub(pattern = "\\[TX\\]",
replacement = spp_data[[taxon]]$code,
variant_names))
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
variant_names
create_zproject(name = sub_project_dir, dir = ".",
variants = variant_names,
dat_template_file = dat_template_file,
spp_template_dir = file.path(data_dir, spp_data[[taxon]]$sheet),
override_path = file.path(prefix_spp_paths, data_dir,
spp_data[[taxon]]$sheet),
overwrite = TRUE, debug = TRUE)
create_zproject(name = sub_project_dir,
variants = variant_names,
dat_template_file = dat_template_file,
spp_template_dir = file.path(data_dir, spp_data[[taxon]]$sheet),
override_path = file.path(prefix_spp_paths, data_dir,
spp_data[[taxon]]$sheet),
overwrite = TRUE, debug = TRUE)
create_zproject(name = sub_project_dir, dir = "",
variants = variant_names,
dat_template_file = dat_template_file,
spp_template_dir = file.path(data_dir, spp_data[[taxon]]$sheet),
override_path = file.path(prefix_spp_paths, data_dir,
spp_data[[taxon]]$sheet),
overwrite = TRUE, debug = TRUE)
sub_project_dir
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
create_zproject(name = sub_project_dir, dir = ".",
variants = variant_names,
dat_template_file = dat_template_file,
spp_template_dir = file.path(data_dir, spp_data[[taxon]]$sheet),
override_path = file.path(prefix_spp_paths, data_dir,
spp_data[[taxon]]$sheet),
overwrite = TRUE, debug = TRUE)
create_zproject(name = sub_project_dir, dir = ".",
variants = variant_names,
dat_template_file = dat_template_file,
spp_template_dir = file.path(data_dir, spp_data[[taxon]]$sheet),
override_path = file.path(prefix_spp_paths, data_dir,
spp_data[[taxon]]$sheet),
overwrite = TRUE, debug = TRUE)
spp_data[[taxon]]$sheet
sub_project_dir
create_zproject(name = sub_project_dir, dir = ".",
variants = variant_names,
dat_template_file = dat_template_file,
spp_template_dir = file.path(data_dir, spp_data[[taxon]]$sheet),
override_path = file.path(prefix_spp_paths, data_dir,
spp_data[[taxon]]$sheet),
overwrite = TRUE, debug = TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
z_control_files
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
sub_project_dir
data_dir
file.path(prefix_spp_paths, data_dir)
file.path(data_dir)
prefix_spp_paths
prefix_spp_paths = vector()
file.path(prefix_spp_paths, data_dir)
prefix_spp_paths = NULL
file.path(prefix_spp_paths, data_dir)
data_dir
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
pwd
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
getwd()
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
getwd()
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
source('~/GitHub/biodiversa/R/01_zproject/01_create_zproject_for_release_modified.R', echo=TRUE)
